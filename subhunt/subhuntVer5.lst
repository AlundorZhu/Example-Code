LINE ADDR CONTENTS SOURCE LINE
  1.              		.EQU KBD_CNTL,  	$000
  2.              		.EQU KBD_STAT,  	$000
  3.              		.EQU KBD_DATA,  	$001
  4.              		.EQU KBD_FLUSH, 	$40
  5.              
  6.              		.EQU TIM_CNTL,      	$030
  7.              		.EQU TIM_STAT,      	$030
  8.              		.EQU TIM_VALUE,     	$031
  9.              		.EQU TIM_COUNT,     	$034
 10.                       
 11.              		.EQU INTERRUPT_ENA,           $80
 12.              		.EQU RESET_READY_BIT,         $40
 13.              		.EQU START_AFTER_LOAD,        $10
 14.              		.EQU ENABLE_RESET_AND_START,  $D0
 15.              		.EQU ENABLE_AND_RESET,        $C0
 16.              
 17.              		.EQU VIDEO_MEMORY,    	$100
 18.              		.EQU CRT_FIRST_ROW, 	$100
 19.              		.EQU CRT_SECOND_ROW,	$126
 20.              		.EQU CRT_THIRD_ROW,		$14C
 21.              		.EQU CRT_FOURTH_ROW,	$172
 22.              		.EQU CRT_FIFTH_ROW,		$198
 23.              		.EQU CRT_SIXTH_ROW,		$1B8
 24.              		
 25.              		.EQU BOTTOM_RIGHT,		$313
 26.              
 27.              		.EQU CRT_XREG,      	$314
 28.              		.EQU CRT_YREG,      	$315
 29.              
 30.              		.EQU CRT_CNTL,      	$316
 31.              		.EQU CRT_DATA,      	$317
 32.              		.EQU CRT_ROWS,      	$0E
 33.              		.EQU CRT_COLS,      	$26
 34.                        		.EQU CLEAR_DISPLAY, 	$01
 35.              
 36.              		.EQU PUT_NUM,       	$E00      	; MINI_OS JSRS
 37.              		.EQU GET_NUM,       	$E01
 38.              		.EQU PUT_STR,       	$E05
 39.              		.EQU PUT_NL,        	$E06
 40.              		.EQU PUT_NUM2,      	$E07
 41.              		.EQU PUT_CHR,       	$E08
 42.              
 43.              		.EQU SCORE_COUNTER,		$107
 44.              		.EQU LEVEL_COUNTER,		$11A
 45.              
 46.              		.EQU CHARGE_DELAY,		10	; number of iteration before the charges move
 47.              		.EQU SUB_DELAY,		5	; number of iteration before the subs move
 48.              		
 49.              ;------------------------------------------------------------------------------------------------------------
 50.              ; set up the playground
 51.              		
 52.              		
 53.  000 020E00  		LDS#	$E00
 54.  001 FFF033  		CIE	
 55.              
 56.  002 000001  		LDA#	CLEAR_DISPLAY
 57.  003 712316  		OUTB	CRT_CNTL
 58.              		
 59.  004 010000  		LDX#	0
 60.  005 000100  		LDA#	VIDEO_MEMORY
 61.  006 0422F4  		STA	I
 62.              		
 63.  007 5022FD  SETUP_SCORE:		LDC	SCORE
 64.  008 7162F4  		OUTB*	I
 65.  009 1B22F4  		INC	I
 66.  00A 110001  		ADX#	1
 67.  00B 210007  		CMX#	SCORE_LENGTH
 68.  00C 492007  		JNE	SETUP_SCORE
 69.              
 70.  00D 010000  		LDX#	0
 71.  00E 000100  		LDA#	VIDEO_MEMORY
 72.  00F 100013  		ADA#	19
 73.  010 0422F4  		STA	I
 74.              
 75.  011 502300  SETUP_LEVEL:		LDC	LEVEL
 76.  012 7162F4  		OUTB*	I
 77.  013 1B22F4  		INC	I
 78.  014 110001  		ADX#	1
 79.  015 210007  		CMX#	LEVEL_LENGTH
 80.  016 492011  		JNE	SETUP_LEVEL
 81.              
 82.  017 000031  		LDA#	'1'
 83.  018 71211A  		OUTB	LEVEL_COUNTER
 84.              	
 85.  019 000030  		LDA#	'0'
 86.  01A 712107  		OUTB	SCORE_COUNTER
 87.              
 88.  01B 010000  		LDX#	0
 89.  01C 000126  		LDA#	CRT_SECOND_ROW
 90.  01D 0422F4  		STA	I
 91.              
 92.  01E 502303  SHIP_ROW_1:		LDC	SHIP_ROW_ONE
 93.  01F 7162F4  		OUTB*	I
 94.  020 1B22F4  		INC	I
 95.  021 110001  		ADX#	1
 96.  022 210008  		CMX#	SHIP_ROW_ONE_LENGTH
 97.  023 49201E  		JNE	SHIP_ROW_1
 98.              
 99.  024 010000  		LDX#	0
100.  025 00014C  		LDA#	CRT_THIRD_ROW
101.  026 0422F4  		STA	I
102.              
103.  027 502306  SHIP_ROW_2:		LDC	SHIP_ROW_TWO
104.  028 7162F4  		OUTB*	I
105.  029 1B22F4  		INC	I
106.  02A 110001  		ADX#	1
107.  02B 21000B  		CMX#	SHIP_ROW_TWO_LENGTH
108.  02C 492027  		JNE	SHIP_ROW_2
109.              		
110.  02D 010000  		LDX#	0
111.  02E 00007E  		LDA#	'~'
112.  02F 714172  WATER_SURFACE:		OUTB+	CRT_FOURTH_ROW
113.  030 600026  		AOC#	38
114.  031 49202F  		JNE	WATER_SURFACE
115.              
116.  032 000005  		LDA#	5		; at 6 start from left
117.  033 0422F6  		STA	SHIP_CURR_POS
118.              
119.  034 0000C0  		LDA#	ENABLE_AND_RESET	; make keyboard ready
120.  035 712000  		OUTB	KBD_CNTL
121.              
122.  036 0022F3  		LDA	DELAY		; start the timer
123.  037 732031  		OUTW	TIM_VALUE
124.  038 0000D0  		LDA#	ENABLE_RESET_AND_START
125.  039 712030  		OUTB	TIM_CNTL
126.              		
127.  03A FFF032  		SIE
128.              ;------------------------------------------------------------------------------------------------------------
129.              ; game runs through the timer interrupt, so main program will be doing nothing
130.  03B 0022FB  MAIN:		LDA	SUB_COUNT
131.  03C 200000  		CMA#	0		; do not inc Lv untill all subs are eliminated
132.  03D 49203B  		JNE	MAIN
133.  03E 0022FA  		LDA	SUB_LIMIT
134.  03F 2022F9  		CMA	LEVEL_CNT	; do not inc Lv untill # of level of subs appeared
135.  040 49203B  		JNE	MAIN
136.  041 412043  		JSR	INCREASE_LEVEL
137.  042 40203B  		JMP	MAIN	
138.              
139.              ;------------------------------------------------------------------------------------------------------------
140.              ;increase level	
141.              
142.  043 680000  INCREASE_LEVEL:	BGN#	0
143.  044 0022FB  		LDA	SUB_COUNT	; another layer of control
144.  045 200000  		CMA#	0
145.  046 492055  		JNE	DONE_INC_LEVEL
146.  047 0022FA  		LDA	SUB_LIMIT
147.  048 2022F9  		CMA	LEVEL_CNT
148.  049 492055  		JNE	DONE_INC_LEVEL
149.  04A 1B22F9  		INC	LEVEL_CNT
150.              		
151.  04B 000001  		LDA#	1		; increase the level displayed on the screen
152.  04C 712315  		OUTB	CRT_YREG
153.  04D 00001B  		LDA#	$1A + 1
154.  04E 712314  		OUTB	CRT_XREG
155.  04F 0022F9  		LDA	LEVEL_CNT
156.  050 412E00  		JSR	PUT_NUM
157.  051 000027  		LDA#	39
158.  052 712314  		OUTB	CRT_XREG
159.  053 0A22FA  		CLR	SUB_LIMIT	; each level start with 1 subs
160.  054 412100  		JSR	MAKE_SUB
161.              		
162.  055 690000  DONE_INC_LEVEL:	FIN#	0
163.  056 FFF040  		RTN
164.              
165.              ;--------------------------------------------------------------------------------------------------------------
166.              ;keyboard ISR
167.              		.EQU DISABLE_INTERRUPTS,	$00
168.              		.EQU SHIP_SIZE_OFFSET,	$5
169.              		.EQU LEFT_BORDER,		$5
170.              		.EQU RIGHT_BORDER,		$20
171.              		
172.              
173.  057 FFF010  KEYBD_ISR:		PSHA
174.  058 FFF011  		PSHX
175.  059 0822F4  		PSH	I
176.  05A 0822F5  		PSH	J
177.              
178.  05B 000000  		LDA#	DISABLE_INTERRUPTS
179.  05C 712000  		OUTB	KBD_CNTL
180.  05D 702001  		INB	KBD_DATA
181.  05E 200068  		CMA#	'h'
182.  05F 482078  		JEQ	MOVE_SHIP_LEFT
183.  060 20006C  		CMA#	'l'
184.  061 482099  		JEQ	MOVE_SHIP_RIGHT
185.  062 20006A  		CMA#	'j'
186.  063 482066  		JEQ	LEFT_CHARGE
187.  064 20006B  		CMA#	'k'
188.  065 48206F  		JEQ	RIGHT_CHARGE
189.              
190.  066 0022F6  LEFT_CHARGE:		LDA	SHIP_CURR_POS
191.  067 140005  		SBA#	SHIP_SIZE_OFFSET
192.  068 100198  		ADA#	CRT_FIFTH_ROW
193.  069 FFF010  		PSHA
194.  06A FFF008  		TSF			; use stack to hold temp
195.              
196.  06B 000076  		LDA#	'v'
197.  06C 717000  		OUTB*	! 0
198.  06D 120001  		ADS#	1		; pop the used
199.  06E 4020B9  		JMP	KEY_DONE
200.              
201.  06F 0022F6  RIGHT_CHARGE:		LDA	SHIP_CURR_POS
202.  070 100005  		ADA#	SHIP_SIZE_OFFSET
203.  071 100198  		ADA#	CRT_FIFTH_ROW
204.  072 FFF010  		PSHA
205.  073 FFF008  		TSF
206.  074 000076  		LDA#	'v'
207.  075 717000  		OUTB*	! 0
208.  076 120001  		ADS#	1
209.  077 4020B9  		JMP	KEY_DONE
210.              
211.  078 0022F6  MOVE_SHIP_LEFT:	LDA	SHIP_CURR_POS
212.  079 200005  		CMA#	LEFT_BORDER
213.  07A 4820B9  		JEQ	KEY_DONE
214.              
215.  07B 000126  		LDA#	CRT_SECOND_ROW
216.  07C 1022F6  		ADA	SHIP_CURR_POS
217.  07D 140003  		SBA#	3
218.  07E 0422F4  		STA	I
219.  07F 140001  		SBA#	1
220.  080 0422F5  		STA	J
221.              
222.  081 010005  		LDX#	5		; loop 6 times
223.  082 0822F4  MV_SHIP_LEFT_LOOP_1:	PSH	I
224.  083 0822F5  		PSH	J
225.  084 412278  		JSR	CRT_SWAP
226.  085 120002  		ADS#	2
227.  086 1B22F4  		INC	I
228.  087 1B22F5  		INC	J
229.  088 612082  		SOJ	MV_SHIP_LEFT_LOOP_1				
230.              
231.  089 00014C  		LDA#	CRT_THIRD_ROW	; I points to head of the ship
232.  08A 1022F6  		ADA	SHIP_CURR_POS
233.  08B 140005  		SBA#	SHIP_SIZE_OFFSET
234.  08C 0422F4  		STA	I
235.              
236.  08D 140001  		SBA#	1
237.  08E 0422F5  		STA	J		; J points to 1 before head of the ship
238.              
239.  08F 01000A  		LDX#	10		; loop 11 times
240.  090 0822F4  MV_SHIP_LEFT_LOOP_2:	PSH	I
241.  091 0822F5  		PSH	J
242.  092 412278  		JSR	CRT_SWAP
243.  093 120002  		ADS#	2
244.  094 1B22F4  		INC	I
245.  095 1B22F5  		INC	J
246.  096 612090  		SOJ	MV_SHIP_LEFT_LOOP_2
247.  097 1C22F6  		DEC	SHIP_CURR_POS
248.  098 4020B9  		JMP	KEY_DONE
249.              
250.  099 0022F6  MOVE_SHIP_RIGHT:	LDA	SHIP_CURR_POS
251.  09A 200020  		CMA#	RIGHT_BORDER
252.  09B 4820B9  		JEQ	KEY_DONE
253.              
254.  09C 000126  		LDA#	CRT_SECOND_ROW
255.  09D 1022F6  		ADA	SHIP_CURR_POS
256.  09E 100002  		ADA#	2
257.  09F 0422F4  		STA	I
258.  0A0 100001  		ADA#	1
259.  0A1 0422F5  		STA	J
260.              
261.  0A2 010005  		LDX#	5		; loop 6 times
262.  0A3 0822F4  MV_SHIP_RIGHT_LOOP_1:	PSH	I
263.  0A4 0822F5  		PSH	J
264.  0A5 412278  		JSR	CRT_SWAP
265.  0A6 120002  		ADS#	2
266.  0A7 1C22F4  		DEC	I
267.  0A8 1C22F5  		DEC	J
268.  0A9 6120A3  		SOJ	MV_SHIP_RIGHT_LOOP_1				
269.              
270.  0AA 00014C  		LDA#	CRT_THIRD_ROW	; I points to tail of the ship
271.  0AB 1022F6  		ADA	SHIP_CURR_POS
272.  0AC 100005  		ADA#	SHIP_SIZE_OFFSET
273.  0AD 0422F4  		STA	I
274.              
275.  0AE 100001  		ADA#	1
276.  0AF 0422F5  		STA	J		; J points to 1 pass tail of the ship
277.              
278.  0B0 01000A  		LDX#	10		; loop 11 times
279.  0B1 0822F4  MV_SHIP_RIGHT_LOOP_2:PSH	I
280.  0B2 0822F5  		PSH	J
281.  0B3 412278  		JSR	CRT_SWAP
282.  0B4 120002  		ADS#	2
283.  0B5 1C22F4  		DEC	I
284.  0B6 1C22F5  		DEC	J
285.  0B7 6120B1  		SOJ	MV_SHIP_RIGHT_LOOP_2
286.  0B8 1B22F6  		INC	SHIP_CURR_POS
287.              		
288.              
289.  0B9 0922F5  KEY_DONE:		POP	J
290.  0BA 0922F4  		POP	I
291.  0BB 0000C0  		LDA#	ENABLE_AND_RESET
292.  0BC 712000  		OUTB	KBD_CNTL
293.  0BD FFF014  		POPX
294.  0BE FFF013  		POPA
295.  0BF FFF041  		IRTN
296.              
297.              ;--------------------------------------------------------------------------------------------------------------
298.  0C0 FFF033  TIMER_ISR:		CIE
299.  0C1 FFF010  		PSHA
300.  0C2 1B22F7  		INC	TIMER
301.              ;---------------------------------------------------------------------------
302.              ;random entering subs
303.  0C3 0022FA  		LDA	SUB_LIMIT
304.  0C4 2022F9  		CMA	LEVEL_CNT
305.  0C5 4820CC  		JEQ	NOT_MAKE_SUBS	; not making new subs if sub_limit = level_count
306.              		
307.  0C6 0803E8  		PSH#	1000
308.  0C7 4122A7  		JSR	RANDOM_TIMER
309.  0C8 120001  		ADS#	1
310.  0C9 200000  		CMA#	0
311.  0CA 4920CC  		JNE	NOT_MAKE_SUBS
312.  0CB 412100  		JSR	MAKE_SUB
313.              ;---------------------------------------------------------------------------		
314.  0CC 0022F7  NOT_MAKE_SUBS:		LDA	TIMER
315.  0CD 200005  		CMA#	SUB_DELAY
316.  0CE 4920D5  		JNE	SKIP_SUBS
317.  0CF 0022FB  		LDA	SUB_COUNT
318.  0D0 200000  		CMA#	0
319.  0D1 4820D5  		JEQ	SKIP_SUBS	
320.  0D2 4121AD  		JSR	MOVE_SUBS
321.  0D3 412259  		JSR	MAKE_ENEMY_CHARGES
322.  0D4 0022F7  		LDA	TIMER
323.              
324.  0D5 20000A  SKIP_SUBS:		CMA#	CHARGE_DELAY
325.  0D6 4920D9  		JNE	TIMER_DONE
326.  0D7 412154  		JSR	MOVE_CHARGES
327.  0D8 0A22F7  		CLR	TIMER		; start new iteration
328.              		
329.              
330.  0D9 0000C0  TIMER_DONE:		LDA#	ENABLE_AND_RESET
331.  0DA 712030  		OUTB	TIM_CNTL
332.  0DB FFF013  		POPA
333.              
334.  0DC FFF032  		SIE
335.  0DD FFF041  		IRTN
336.              
337.              ;--------------------------------------------------------------------------------------------------------------
338.  0DE FFF033  GAME_OVER:		CIE
339.              		
340.  0DF 020E00  		LDS#	$E00
341.              
342.  0E0 000001  		LDA#	CLEAR_DISPLAY
343.  0E1 712316  		OUTB	CRT_CNTL
344.              
345.  0E2 000002  		LDA#	2
346.  0E3 712314  		OUTB	CRT_XREG
347.  0E4 010001  		LDX#	1
348.  0E5 00031D  		LDA#	EXPLOSION_1	; starting address of explosions
349.  0E6 0422F4  		STA	I
350.              
351.  0E7 000002  EXPLOSION_LOOP:	LDA#	2
352.  0E8 712314  		OUTB	CRT_XREG
353.              
354.  0E9 FFF003  		TXA
355.  0EA 712315  		OUTB	CRT_YREG
356.              
357.  0EB 080021  		PSH#	EXPLOSION_1_LENGTH		; push the str_len
358.  0EC 0822F4  		PSH	I		; push the address of the explosions
359.  0ED 412E05  		JSR	PUT_STR
360.  0EE 120002  		ADS#	2
361.              
362.  0EF 0022F4  		LDA	I
363.  0F0 10000B  		ADA#	$34 - $29
364.  0F1 0422F4  		STA	I
365.              
366.  0F2 110001  		ADX#	1
367.  0F3 210009  		CMX#	9
368.  0F4 4920E7  		JNE	EXPLOSION_LOOP
369.              
370.  0F5 00000A  		LDA#	10
371.  0F6 712315  		OUTB	CRT_YREG
372.  0F7 00000A  		LDA#	10
373.  0F8 712314  		OUTB	CRT_XREG
374.              
375.  0F9 080014  		PSH#	GAMEOVER_LENGTH
376.  0FA 080316  		PSH#	GAMEOVER_MSG
377.  0FB 412E05  		JSR	PUT_STR
378.  0FC 120002  		ADS#	2
379.  0FD 000027  		LDA#	39
380.  0FE 712314  		OUTB	CRT_XREG
381.  0FF FFFFFF  		HLT
382.              
383.              ;--------------------------------------------------------------------------------------------------------------
384.              
385.  100 680000  MAKE_SUB:		BGN#	0
386.  101 FFF010  		PSHA
387.  102 0822F5  		PSH	J
388.  103 0822F4  		PSH	I
389.              
390.  104 1B22FB  		INC	SUB_COUNT
391.  105 1B22FA  		INC	SUB_LIMIT	; not making new subs when limit reaches
392.              		
393.              
394.  106 080008  		PSH#	8
395.  107 4122A7  		JSR	RANDOM_TIMER
396.  108 120001  		ADS#  	1
397.              
398.  109 100006  		ADA#	6		; starting at sixth row
399.  10A 0422F5  		STA	J		; J = TEMP_Y, sub_entering height
400.              
401.  10B 0822F5  		PSH	J
402.  10C 412283  		JSR	NO_BLOCK
403.  10D 120001  		ADS#	1
404.  10E 200001  		CMA#	1
405.  10F 482113  		JEQ	OPEN_ROUTE	; 1 = no block
406.  110 1C22FB  		DEC	SUB_COUNT
407.  111 1C22FA  		DEC	SUB_LIMIT
408.  112 40214D  		JMP	MAKE_SUB_DONE	
409.              
410.  113 080001  OPEN_ROUTE:		PSH#	1		; random 0/1
411.  114 4122A7  		JSR	RANDOM_TIMER
412.  115 120001  		ADS#	1
413.  116 180025  		MUL#	37
414.  117 100001  		ADA#	1
415.              
416.  118 0422F4  		STA	I		; I = horizontal offset
417.  119 200026  		CMA#	38
418.  11A 48211C  		JEQ	ENTERING_RIGHT; Entering right
419.  11B 402137  		JMP	ENTERING_LEFT ; Entering left
420.              		
421.  11C 0022FA  ENTERING_RIGHT:	LDA	SUB_LIMIT	; choose fast or slow sub: sub_limit mod 2, 0=slow 1=fast
422.  11D 1A0002  		MOD#	2
423.  11E 200000  		CMA#	0
424.  11F 482121  		JEQ	SLOW_ENTERING_RIGHT
425.  120 40212C  		JMP	FAST_ENTERING_RIGHT
426.              
427.  121 0022F5  SLOW_ENTERING_RIGHT:	LDA	J
428.  122 712315  		OUTB	CRT_YREG
429.  123 0022F4  		LDA	I
430.  124 140007  		SBA#	ONE_POINT_SUB_RIGHT_LENGTH
431.  125 0422F4  		STA	I
432.  126 712314  		OUTB	CRT_XREG
433.  127 080007  		PSH#	ONE_POINT_SUB_RIGHT_LENGTH
434.  128 08030A  		PSH#	ONE_POINT_SUB_RIGHT
435.  129 412E05  		JSR	PUT_STR
436.  12A 120002  		ADS#	2
437.  12B 40214D  		JMP 	MAKE_SUB_DONE
438.              
439.  12C 0022F5  FAST_ENTERING_RIGHT:	LDA	J
440.  12D 712315  		OUTB	CRT_YREG
441.  12E 0022F4  		LDA	I
442.  12F 140003  		SBA#	TWO_POINT_SUB_RIGHT_LENGTH
443.  130 0422F4  		STA	I
444.  131 712314  		OUTB	CRT_XREG
445.  132 080003  		PSH#	TWO_POINT_SUB_RIGHT_LENGTH
446.  133 080310  		PSH#	TWO_POINT_SUB_RIGHT
447.  134 412E05  		JSR	PUT_STR
448.  135 120002  		ADS#	2
449.  136 40214D  		JMP 	MAKE_SUB_DONE
450.              ;----------------------------------------------------------------------------------------
451.              
452.  137 0022FA  ENTERING_LEFT:		LDA	SUB_LIMIT	; choose fast or slow sub: sub_limit mod 2, 0=slow 1=fast
453.  138 1A0002  		MOD#	2
454.  139 200000  		CMA#	0
455.  13A 48213C  		JEQ	SLOW_ENTERING_LEFT
456.  13B 402145  		JMP	FAST_ENTERING_LEFT
457.              
458.  13C 0022F5  SLOW_ENTERING_LEFT:	LDA	J
459.  13D 712315  		OUTB	CRT_YREG
460.  13E 0022F4  		LDA	I
461.  13F 712314  		OUTB	CRT_XREG
462.  140 080007  		PSH#	ONE_POINT_SUB_LEFT_LENGTH
463.  141 08030D  		PSH#	ONE_POINT_SUB_LEFT
464.  142 412E05  		JSR	PUT_STR
465.  143 120002  		ADS#	2
466.  144 40214D  		JMP	MAKE_SUB_DONE
467.              
468.  145 0022F5  FAST_ENTERING_LEFT:  LDA	J
469.  146 712315  		OUTB	CRT_YREG
470.  147 0022F4  		LDA	I
471.  148 712314  		OUTB	CRT_XREG
472.  149 080003  		PSH#	TWO_POINT_SUB_LEFT_LENGTH
473.  14A 080311  		PSH#	TWO_POINT_SUB_LEFT
474.  14B 412E05  		JSR	PUT_STR
475.  14C 120002  		ADS#	2
476.              
477.  14D 000027  MAKE_SUB_DONE:		LDA#	39
478.  14E 712314  		OUTB	CRT_XREG
479.              
480.  14F 0922F4  		POP	I
481.  150 0922F5  		POP	J
482.  151 FFF013  		POPA
483.  152 690000  		FIN#	0
484.  153 FFF040  		RTN
485.              
486.              ;--------------------------------------------------------------------------------------------------------------
487.              ;move_charges (move the charges)
488.              
489.  154 680000  MOVE_CHARGES:		BGN#	0
490.  155 FFF010  		PSHA
491.  156 0822F4  		PSH	I
492.  157 0822F5  		PSH	J
493.              		
494.  158 000313  		LDA#	BOTTOM_RIGHT
495.  159 0422F4  		STA	I
496.  15A 0022F4  BOTTOM_LINE_CHECK:	LDA	I
497.  15B 2002ED  		CMA#	BOTTOM_RIGHT - 38	; right end of second last line
498.  15C 4C2166  		JLE	MOVE_DOWN
499.  15D 7062F4  		INB*	I
500.  15E 1C22F4  		DEC	I
501.  15F 200076  		CMA#	'v'
502.  160 49215A  		JNE	BOTTOM_LINE_CHECK
503.  161 1B22F4  		INC	I
504.  162 000020  		LDA#	' '
505.  163 7162F4  		OUTB*	I
506.  164 1C22F4  		DEC	I
507.  165 40215A  		JMP	BOTTOM_LINE_CHECK
508.              
509.              
510.  166 0022F4  MOVE_DOWN:		LDA	I
511.  167 200198  		CMA#	CRT_FIFTH_ROW	; scan the screen from bottom right to the left end of fifth row, check for charges, and move them one row below
512.  168 4A217D  		JLT	MOVE_UP
513.  169 7062F4  		INB*	I
514.  16A 1C22F4  		DEC	I
515.  16B 200076  		CMA#	'v'
516.  16C 492166  		JNE	MOVE_DOWN
517.              
518.  16D 1B22F4  		INC	I
519.  16E 0022F4  		LDA	I
520.  16F 100026  		ADA#	38
521.  170 0422F5  		STA	J
522.  171 7062F5  		INB*	J
523.  172 20003E  		CMA# 	'>'	
524.  173 4822CA  		JEQ	SUB_DESTROYED
525.  174 20003C  		CMA# 	'<'	
526.  175 4822CA  		JEQ	SUB_DESTROYED
527.  176 20002A  		CMA# 	'*'	
528.  177 4822CA  		JEQ	SUB_DESTROYED
529.  178 0822F4  		PSH	I
530.  179 0822F5  		PSH	J
531.  17A 412278  		JSR	CRT_SWAP
532.  17B 120002  		ADS#	2
533.  17C 402166  		JMP	MOVE_DOWN
534.              
535.  17D 000198  MOVE_UP:		LDA#	CRT_FIFTH_ROW
536.  17E 0422F4  		STA	I
537.              
538.  17F 0022F4  TOP_LINE_CHECK:		LDA	I
539.  180 2001BE  		CMA#	CRT_FIFTH_ROW + 38
540.  181 4D2196  		JGT	MOVE_UP_LOOP
541.  182 7062F4  		INB*	I
542.  183 1B22F4  		INC	I
543.  184 20005E  		CMA#	'^'
544.  185 49217F  		JNE	TOP_LINE_CHECK
545.  186 1C22F4  		DEC	I
546.              
547.  187 0022F4  		LDA	I		; check if ship hit
548.  188 140198  		SBA#	CRT_FIFTH_ROW
549.  189 0422F5  		STA	J		; enemy charge X-pos
550.  18A 0022F6  		LDA	SHIP_CURR_POS
551.  18B 140005  		SBA#	SHIP_SIZE_OFFSET
552.  18C 2022F5  		CMA	J
553.  18D 4D2192  		JGT	NOT_HIT
554.  18E 10000A  		ADA#	2 * SHIP_SIZE_OFFSET
555.  18F 2022F5  		CMA	J
556.  190 4A2192  		JLT	NOT_HIT
557.  191 4020DE  		JMP	GAME_OVER	
558.              
559.  192 000020  NOT_HIT:		LDA#	' '
560.  193 7162F4  		OUTB*	I
561.  194 1B22F4  		INC	I
562.  195 40217F  		JMP	TOP_LINE_CHECK
563.              
564.              
565.  196 0022F4  MOVE_UP_LOOP:		LDA	I
566.  197 200313  		CMA#	BOTTOM_RIGHT	; scan the screen from bottom right to the left end of fifth row, check for charges, and move them one row below
567.  198 4D21A8  		JGT	MOVE_DONE
568.  199 7062F4  		INB*	I
569.  19A 1B22F4  		INC	I
570.  19B 20005E  		CMA#	'^'
571.  19C 492196  		JNE	MOVE_UP_LOOP
572.              
573.  19D 1C22F4  		DEC	I
574.  19E 0022F4  		LDA	I
575.  19F 140026  		SBA#	38
576.  1A0 0422F5  		STA	J
577.              		
578.  1A1 0822F4  		PSH	I
579.  1A2 0822F5  		PSH	J
580.  1A3 412278  		JSR	CRT_SWAP
581.  1A4 120002  		ADS#	2
582.  1A5 402196  		JMP	MOVE_UP_LOOP
583.              
584.  1A6 1C22F4  DONE_MOVING:		DEC	I
585.  1A7 402166  		JMP	MOVE_DOWN
586.              		
587.  1A8 0922F5  MOVE_DONE:		POP	J
588.  1A9 0922F4  		POP	I
589.  1AA FFF013  		POPA
590.  1AB 690000  		FIN#	0
591.  1AC FFF040  		RTN
592.              ;-------------------------------------------------------------------------------------------------------------
593.              ; move_subs	(move the submarines)
594.  1AD 680000  MOVE_SUBS:		BGN#	0
595.  1AE 0822F4  		PSH	I
596.  1AF 0822F5  		PSH	J
597.  1B0 FFF010  		PSHA
598.              
599.  1B1 000313  		LDA#	BOTTOM_RIGHT
600.  1B2 0422F4  		STA	I
601.              		
602.  1B3 0022F4  MOVE_SUBS_RIGHT:	LDA	I
603.  1B4 200198  		CMA#	CRT_FIFTH_ROW	; scan the screen from bottom right to the left end of fifth row
604.  1B5 4A21D1  		JLT	MOVE_SUBS_LEFT
605.  1B6 7062F4  		INB*	I
606.  1B7 1C22F4  		DEC	I
607.  1B8 20003E  		CMA#	'>'
608.  1B9 4821C9  		JEQ	SHIFT_SUB_RIGHT
609.  1BA 20003C  		CMA#	'<'
610.  1BB 4921C6  		JNE	RIGHT_DIRECTION_SUB
611.              
612.  1BC 7062F4  		INB*	I		; skip over this sub
613.  1BD 20003C  		CMA#	'<'
614.  1BE 4821C3  		JEQ	TWO_POINT_LEFT
615.              
616.  1BF 0022F4  		LDA	I
617.  1C0 140006  		SBA#	ONE_POINT_SUB_LEFT_LENGTH - 1
618.  1C1 0422F4  		STA	I
619.  1C2 4021B3  		JMP	MOVE_SUBS_RIGHT
620.              
621.  1C3 0022F4  TWO_POINT_LEFT:	LDA	I
622.  1C4 140002  		SBA#	2
623.  1C5 4021B3  		JMP	MOVE_SUBS_RIGHT
624.              
625.  1C6 20002A  RIGHT_DIRECTION_SUB:	CMA#	'*'
626.  1C7 4821C9  		JEQ	SHIFT_SUB_RIGHT
627.  1C8 4021B3  		JMP	MOVE_SUBS_RIGHT
628.              
629.  1C9 412228  SHIFT_SUB_RIGHT:	JSR	RIGHT_SHIFT	; return 1 position after the sub
630.  1CA 0422F4  		STA	I
631.  1CB 100001  		ADA#	1
632.  1CC 140100  		SBA#	$100
633.  1CD 1A0026  		MOD#	38
634.  1CE 4921D0  		JNE	RIGHT_WALL_ATE
635.  1CF 1C22FB  		DEC	SUB_COUNT	
636.  1D0 4021B3  RIGHT_WALL_ATE:	JMP	MOVE_SUBS_RIGHT
637.              
638.              ;-----------------------------------------------------------------------------------------
639.              
640.  1D1 000198  MOVE_SUBS_LEFT:	LDA#	CRT_FIFTH_ROW	; scan the screen from fifth row left end to bottom right
641.  1D2 0422F4  		STA	I
642.              
643.  1D3 0022F4  LOOP_MV_SUB_L:		LDA	I
644.  1D4 200313  		CMA#	BOTTOM_RIGHT	
645.  1D5 4D21F1  		JGT	MOVE_SUBS_DONE
646.  1D6 7062F4  		INB*	I
647.  1D7 1B22F4  		INC	I
648.  1D8 20003C  		CMA#	'<'
649.  1D9 4821EA  		JEQ	SHIFT_SUB_LEFT
650.  1DA 20003E  		CMA#	'>'
651.  1DB 4921E7  		JNE	LEFT_DIRECTION_SUB
652.              
653.  1DC 7062F4  		INB*	I		; skip over this sub
654.  1DD 20003E  		CMA#	'>'
655.  1DE 4821E3  		JEQ	TWO_POINT_RIGHT
656.              
657.  1DF 0022F4  		LDA	I
658.  1E0 100006  		ADA#	ONE_POINT_SUB_RIGHT_LENGTH - 1
659.  1E1 0422F4  		STA	I
660.  1E2 4021D3  		JMP	LOOP_MV_SUB_L
661.              
662.  1E3 0022F4  TWO_POINT_RIGHT:	LDA	I
663.  1E4 100002  		ADA#	2
664.  1E5 0422F4  		STA	I
665.  1E6 4021D3  		JMP	LOOP_MV_SUB_L
666.              
667.  1E7 20002A  LEFT_DIRECTION_SUB:	CMA#	'*'
668.  1E8 4821EA  		JEQ	SHIFT_SUB_LEFT
669.  1E9 4021D3  		JMP	LOOP_MV_SUB_L
670.              
671.  1EA 4121F6  SHIFT_SUB_LEFT:	JSR	LEFT_SHIFT	; return 1 position after the sub
672.  1EB 0422F4  		STA	I
673.  1EC 140100  		SBA#	$100
674.  1ED 1A0026  		MOD#	38
675.  1EE 4921F0  		JNE	LEFT_WALL_ATE
676.  1EF 1C22FB  		DEC	SUB_COUNT	
677.  1F0 4021D3  LEFT_WALL_ATE:		JMP	LOOP_MV_SUB_L
678.              		
679.  1F1 FFF013  MOVE_SUBS_DONE:	POPA
680.  1F2 0922F5  		POP	J
681.  1F3 0922F4  		POP	I
682.  1F4 690000  		FIN#	0
683.  1F5 FFF040  		RTN
684.              ;-------------------------------------------------------------------------------------------------------------
685.              ;LEFT_SHIFT
686.  1F6 680000  LEFT_SHIFT:		BGN#	0
687.  1F7 0822F4  		PSH	I
688.  1F8 0822F5  		PSH	J
689.              
690.  1F9 7062F4  		INB*	I
691.  1FA 20002A  		CMA#	'*'
692.  1FB 482201  		JEQ	SLOW_LEFT
693.  1FC 1C22F4  		DEC	I
694.  1FD 0022F4  		LDA	I
695.  1FE 140002  		SBA#	2
696.  1FF 0422F5  		STA	J		; J = I - 2
697.  200 402205  		JMP	SHIFT_LEFT
698.              		
699.  201 1C22F4  SLOW_LEFT:		DEC	I
700.  202 0022F4  		LDA	I
701.  203 140001  		SBA#	1
702.  204 0422F5  		STA	J		; J = I - 1
703.              
704.  205 140100  SHIFT_LEFT:		SBA#	$100
705.  206 1A0026  		MOD#	38
706.  207 200025  		CMA#	37
707.  208 48220C  		JEQ	SLOW_LEFT_WALL
708.  209 200024  		CMA#	36
709.  20A 48221A  		JEQ	FAST_LEFT_WALL
710.  20B 402210  		JMP	LEFT_WALL
711.              
712.  20C 000020  SLOW_LEFT_WALL:		LDA#	' '
713.  20D 7162F4  		OUTB*	I
714.  20E 1B22F4  		INC	I
715.  20F 1B22F5  		INC	J
716.              	
717.  210 7062F4  LEFT_WALL:		INB*	I
718.  211 200020  		CMA#	' '
719.  212 482223  		JEQ	LEFT_SHIFT_DONE
720.              
721.  213 0822F4  		PSH	I
722.  214 0822F5  		PSH	J
723.  215 412278  		JSR	CRT_SWAP
724.  216 120002  		ADS#	2
725.              
726.  217 1B22F4  		INC	I
727.  218 1B22F5  		INC	J
728.  219 402210  		JMP	LEFT_WALL
729.              
730.  21A 000020  FAST_LEFT_WALL:		LDA#	' '
731.  21B 7162F4  		OUTB*	I
732.  21C 1B22F4  		INC	I
733.  21D 1B22F5  		INC	J
734.              
735.  21E 000020  		LDA#	' '
736.  21F 7162F4  		OUTB*	I
737.  220 1B22F4  		INC	I
738.  221 1B22F5  		INC	J
739.  222 402210  		JMP	LEFT_WALL	
740.              		
741.  223 0022F5  LEFT_SHIFT_DONE:	LDA	J
742.  224 0922F5  		POP	J
743.  225 0922F4  		POP	I		
744.  226 690000  		FIN#	0
745.  227 FFF040  		RTN
746.              ;-------------------------------------------------------------------------------------------------------------
747.              ;RIGHT_SHIFT (move the sub right 1 spot)
748.  228 680000  RIGHT_SHIFT:		BGN#	0
749.  229 0822F4  		PSH	I
750.  22A 0822F5  		PSH	J
751.              		
752.  22B 7062F4  		INB*	I
753.  22C 20002A  		CMA#	'*'
754.  22D 482233  		JEQ	SLOW_RIGHT
755.  22E 1B22F4  		INC	I
756.  22F 0022F4  		LDA	I
757.  230 100002  		ADA#	2
758.  231 0422F5  		STA	J		; J = I + 2
759.  232 402237  		JMP	SHIFT_RIGHT
760.              
761.  233 1B22F4  SLOW_RIGHT:		INC	I
762.  234 0022F4  		LDA	I
763.  235 100001  		ADA#	1
764.  236 0422F5  		STA	J		; J = I + 1
765.              
766.  237 140100  SHIFT_RIGHT:		SBA#	$100
767.  238 1A0026  		MOD#	38
768.  239 200000  		CMA#	0
769.  23A 48223E  		JEQ	SLOW_RIGHT_WALL
770.  23B 200001  		CMA#	1
771.  23C 48224C  		JEQ	FAST_RIGHT_WALL
772.  23D 402242  		JMP	RIGHT_WALL
773.              
774.  23E 000020  SLOW_RIGHT_WALL:	LDA#	' '
775.  23F 7162F4  		OUTB*	I
776.  240 1C22F4  		DEC	I
777.  241 1C22F5  		DEC	J
778.              	
779.  242 7062F4  RIGHT_WALL:		INB*	I
780.  243 200020  		CMA#	' '
781.  244 482254  		JEQ	RIGHT_SHIFT_DONE
782.              
783.  245 0822F4  		PSH	I
784.  246 0822F5  		PSH	J
785.  247 412278  		JSR	CRT_SWAP
786.  248 120002  		ADS#	2
787.              
788.  249 1C22F4  		DEC	I
789.  24A 1C22F5  		DEC	J
790.  24B 402242  		JMP	RIGHT_WALL
791.              
792.  24C 000020  FAST_RIGHT_WALL:	LDA#	' '		; shift two place once, eat two once
793.  24D 7162F4  		OUTB*	I
794.  24E 1C22F4  		DEC	I
795.  24F 1C22F5  		DEC	J
796.              
797.  250 000020  		LDA#	' '
798.  251 7162F4  		OUTB*	I
799.  252 1C22F4  		DEC	I
800.  253 1C22F5  		DEC	J
801.              
802.  254 0022F5  RIGHT_SHIFT_DONE:	LDA	J
803.  255 0922F5  		POP	J
804.  256 0922F4  		POP	I		
805.  257 690000  		FIN#	0
806.  258 FFF040  		RTN
807.              
808.              ;--------------------------------------------------------------------------------------------------------------
809.              ; make_enemy_charges
810.  259 680000  MAKE_ENEMY_CHARGES: BGN#	0
811.  25A 0822F4  	     PSH	I
812.  25B 0822F5  	     PSH	J
813.              
814.  25C 08000A  		PSH#	10
815.  25D 4122A7  		JSR	RANDOM_TIMER
816.  25E 120001  		ADS#	1
817.  25F 200000  		CMA#	0
818.  260 492274  		JNE	MAKE_MINES_DONE
819.  261 0022FB  		LDA	SUB_COUNT
820.  262 200000  		CMA#	0
821.  263 482274  		JEQ	MAKE_MINES_DONE
822.              
823.  264 000313  	     LDA#	BOTTOM_RIGHT
824.  265 0422F4  	     STA	I
825.  266 0022F4  FIND_ENEMY_SUB:  LDA	I
826.  267 2001B8  	     CMA#	CRT_SIXTH_ROW
827.  268 7062F4  	     INB*	I
828.  269 1C22F4  	     DEC	I
829.  26A 20003E  	     CMA#	'>'
830.  26B 48226F  	     JEQ	MAKE_ENEMY_BOMB
831.  26C 20003C  	     CMA#	'<'
832.  26D 48226F  	     JEQ	MAKE_ENEMY_BOMB
833.  26E 402266  	     JMP	FIND_ENEMY_SUB
834.              
835.  26F 0022F4  MAKE_ENEMY_BOMB: LDA	I
836.  270 140026  	     SBA#	38
837.  271 0422F4  	     STA	I
838.  272 00005E  	     LDA#   	'^'
839.  273 7162F4  	     OUTB*	I
840.              
841.  274 0922F5  MAKE_MINES_DONE:    POP	J
842.  275 0922F4  	     POP	I
843.  276 690000  	     FIN#	0
844.  277 FFF040  	     RTN
845.              
846.              ;--------------------------------------------------------------------------------------------------------------
847.              ;crt_swap(U,V)
848.              		.EQU U,	2
849.              		.EQU V,	3
850.  278 680000  CRT_SWAP:		BGN#	0
851.  279 FFF010  		PSHA
852.  27A 707002  		INB*	! U
853.  27B FFF010  		PSHA	
854.  27C 707003  		INB*	! V
855.  27D 717002  		OUTB*	! U
856.  27E FFF013  		POPA	
857.  27F 717003  		OUTB*	! V
858.  280 FFF013  		POPA
859.  281 690000  		FIN#	0
860.  282 FFF040  		RTN
861.              
862.              ;------------------------------------------------------------------------------------------------------------
863.              ; No Block on y
864.              		.EQU Y, 2
865.  283 680000  NO_BLOCK:		BGN#	0
866.  284 FFF011  		PSHX
867.  285 0822F4  		PSH	I
868.              
869.  286 003002  		LDA	! Y
870.  287 140001  		SBA#	1
871.  288 180026  		MUL#	38
872.  289 100100  		ADA#	$100
873.  28A 0422F4  		STA	I
874.              
875.  28B 010025  		LDX#	37		; loop 38 times
876.  28C 7062F4  NO_BLOCK_LOOP:		INB*	I
877.  28D 20003C  		CMA#	'<'
878.  28E 482297  		JEQ	BLOCKED
879.  28F 20003E  		CMA#	'>'
880.  290 482297  		JEQ	BLOCKED
881.  291 20002A  		CMA#	'*'
882.  292 482297  		JEQ	BLOCKED
883.  293 1B22F4  		INC	I	
884.  294 61228C  		SOJ	NO_BLOCK_LOOP
885.  295 000001  		LDA#	1		; checked, no block
886.  296 402298  		JMP	NO_BLOCK_DONE
887.              
888.  297 000000  BLOCKED:		LDA#	0
889.  298 0922F4  NO_BLOCK_DONE:		POP	I
890.  299 FFF014  		POPX
891.  29A 690000  		FIN#	0
892.  29B FFF040  		RTN
893.              
894.              ;-------------------------------------------------------------------------------------------------------------
895.              		.EQU	randomMax, 2
896.  29C 680000  RANDOM:		BGN#	0
897.  29D 0022F8  		LDA	SEED
898.  29E 180ADB  		MUL#	2779
899.  29F 1007CD  		ADA#	1997
900.  2A0 1A0800  		MOD#	2048
901.  2A1 0422F8  		STA	SEED
902.  2A2 1B3002  		INC !	randomMax
903.  2A3 1A3002  		MOD !	randomMax
904.  2A4 100004  		ADA#  	4
905.  2A5 690000  		FIN#	0
906.  2A6 FFF040  		RTN
907.              
908.              ;-------------------------------------------------------------------------------------------------------------
909.              		.EQU	randomMaxD, 2
910.  2A7 680000  RANDOM_TIMER:		BGN#	0
911.  2A8 0022F8  		LDA	SEED
912.  2A9 180ADB  		MUL#	2779
913.  2AA 1007CD  		ADA#	1997
914.  2AB 1A0800  		MOD#	2048
915.  2AC 0422F8  		STA	SEED
916.  2AD 1B3002  		INC !	randomMaxD
917.  2AE 1A3002  		MOD !	randomMaxD
918.  2AF 690000  		FIN#	0
919.  2B0 FFF040  		RTN
920.              
921.              ;-------------------------------------------------------------------------------------------------------------
922.              		
923.              		.EQU HIT_SUB_POS,	2 
924.              
925.  2B1 680000  INCREASE_SCORE:	BGN#	0
926.  2B2 1B22FC  		INC	SCORE_CNT
927.              		
928.  2B3 707002  		INB*	! HIT_SUB_POS	; hit which type of sub?
929.  2B4 20002A  		CMA#	'*'
930.  2B5 4822C0  		JEQ	DONE_INC_SCORE
931.              
932.  2B6 1C3002  		DEC	! HIT_SUB_POS
933.  2B7 707002  		INB*	! HIT_SUB_POS	; hit which type of sub?
934.  2B8 20002A  		CMA#	'*'
935.  2B9 4822C0  		JEQ	DONE_INC_SCORE
936.              
937.  2BA 1B3002  		INC	! HIT_SUB_POS
938.  2BB 1B3002  		INC	! HIT_SUB_POS
939.  2BC 707002  		INB*	! HIT_SUB_POS	; hit which type of sub?
940.  2BD 20002A  		CMA#	'*'
941.  2BE 4822C0  		JEQ	DONE_INC_SCORE
942.              		
943.  2BF 1B22FC  		INC	SCORE_CNT
944.              
945.              
946.              		
947.  2C0 000001  DONE_INC_SCORE:	LDA#	1		; increase the level displayed on the screen
948.  2C1 712315  		OUTB	CRT_YREG
949.  2C2 000008  		LDA#	8
950.  2C3 712314  		OUTB	CRT_XREG
951.  2C4 0022FC  		LDA	SCORE_CNT
952.  2C5 412E00  		JSR	PUT_NUM
953.  2C6 000027  		LDA#	39
954.  2C7 712314  		OUTB	CRT_XREG
955.  2C8 690000  		FIN#	0
956.  2C9 FFF040  		RTN
957.              
958.              ;-------------------------------------------------------------------------------------------------------------
959.              ; submarine destroyed
960.  2CA 0822F5  SUB_DESTROYED:		PSH	J
961.  2CB 4122B1  		JSR	INCREASE_SCORE
962.  2CC 120001  		ADS#	1
963.              
964.  2CD 000020  		LDA# 	' '
965.  2CE 7162F4  		OUTB*	I
966.  2CF 010000  		LDX# 	0
967.  2D0 0022F5  		LDA	J
968.  2D1 140005  		SBA#	5
969.  2D2 0422F5  		STA	J
970.              
971.              		
972.              		
973.              
974.  2D3 000020  LOOP_DESTROY:	LDA#	' '
975.  2D4 7162F5  		OUTB*	J
976.  2D5 1B22F5  		INC	J
977.  2D6 110001  		ADX#	1
978.  2D7 21000A  		CMX#	10
979.  2D8 4A22D3  		JLT	LOOP_DESTROY
980.              ;----------------------------------------------
981.  2D9 010000  		LDX#	0
982.  2DA 0022F5  		LDA	J
983.  2DB 140005  		SBA#	5
984.  2DC 0422F5  		STA	J
985.  2DD 502312  BOOM_LOOP_MSG:	LDC	BLOW_UP_MSG
986.  2DE 7162F5  		OUTB*	J
987.  2DF 1B22F5  		INC	J
988.  2E0 110001  		ADX#	1
989.  2E1 210009  		CMX#	9
990.  2E2 4922DD  		JNE	BOOM_LOOP_MSG
991.              ;--------------------------------------------------
992.              		
993.  2E3 0022F3  		LDA	DELAY
994.  2E4 18000F  		MUL#	15
995.  2E5 FFF000  		TAX
996.  2E6 6122E6  LOOP_ONE:		SOJ	LOOP_ONE
997.              
998.  2E7 010000  CLEAN_UP_BOOM:	LDX#	0
999.  2E8 0022F5  		LDA	J
1000.  2E9 140009  		SBA#	9
1001.  2EA 0422F5  		STA	J
1002.  2EB 000020  CLEAN_UP_LOOP:	LDA#	' '
1003.  2EC 7162F5  		OUTB*	J
1004.  2ED 1B22F5  		INC	J
1005.  2EE 110001  		ADX#	1
1006.  2EF 21000A  		CMX#	10
1007.  2F0 4A22EB  		JLT	CLEAN_UP_LOOP
1008.  2F1 1C22FB  		DEC	SUB_COUNT
1009.  2F2 4021A6  	     JMP	DONE_MOVING
1010.              
1011.              ;--------------------------------------------------------------------------------------------------------------
1012.              
1013.  2F3 004E20  DELAY:    	.WORD 20000
1014.  2F4 FFFFFFFFFFFFFFFF  I:	.BLKW 1			; global temps
1015.  2F5 FFFFFFFFFFFFFFFF  J:	.BLKW 1
1016.  2F6 FFFFFFFFFFFFFFFF  SHIP_CURR_POS:	.BLKW 1
1017.  2F7 000000  TIMER:	.WORD	0
1018.  2F8 000000  SEED:	.WORD	0
1019.  2F9 000000  LEVEL_CNT:	.WORD	0
1020.  2FA 000000  SUB_LIMIT:	.WORD	0
1021.  2FB 000000  SUB_COUNT:	.WORD	0			; -(current alive subs)
1022.  2FC 000000  SCORE_CNT:	.WORD	0
1023.              
1024.              
1025.  2FD 53636F  SCORE:	.CHAR	'Score: ', SCORE_LENGTH
      2FE 72653A
      2FF 202020
1026.  300 4C6576  LEVEL:	.CHAR	'Level: ', LEVEL_LENGTH
      301 656C3A
      302 202020
1027.  303 20205C  SHIP_ROW_ONE:	.CHAR	'  \\   O,', SHIP_ROW_ONE_LENGTH
      304 202020
      305 4F2C20
1028.  306 5C5F5F  SHIP_ROW_TWO:	.CHAR	'\\___\\/ )__/', SHIP_ROW_TWO_LENGTH
      307 5F5C2F
      308 20295F
      309 5F2F20
      30A 3C2A2A
1029.              
1030.  30A 3C2A2A  ONE_POINT_SUB_RIGHT:	.CHAR '<*****<', ONE_POINT_SUB_RIGHT_LENGTH	; slow speed sub
      30B 2A2A2A
      30C 3C2020
1031.  30D 3E2A2A  ONE_POINT_SUB_LEFT:	.CHAR '>*****>', ONE_POINT_SUB_LEFT_LENGTH
      30E 2A2A2A
      30F 3E2020
1032.  310 3C3C3C  TWO_POINT_SUB_RIGHT:	.CHAR '<<<', TWO_POINT_SUB_RIGHT_LENGTH	; fast speed sub
1033.  311 3E3E3E  TWO_POINT_SUB_LEFT:	.CHAR '>>>', TWO_POINT_SUB_LEFT_LENGTH
1034.              
1035.  312 3D2324  BLOW_UP_MSG:		.CHAR '=#$%&%$#=-', BOOM_LENGTH
      313 252625
      314 24233D
      315 2D2020
1036.  316 47414D  GAMEOVER_MSG:		.CHAR 'GAME OVER! YOU LOSE!', GAMEOVER_LENGTH
      317 45204F
      318 564552
      319 212059
      31A 4F5520
      31B 4C4F53
      31C 452120
1037.              
1038.  31D 202020  EXPLOSION_1:	.CHAR '          _ ._  _ , _ ._         ', EXPLOSION_1_LENGTH
      31E 202020
      31F 202020
      320 205F20
      321 2E5F20
      322 205F20
      323 2C205F
      324 202E5F
      325 202020
      326 202020
      327 202020
1039.  328 202020  EXPLOSION_2:	.CHAR '        (_ " ( `  )_  .__)       ', EXPLOSION_2_LENGTH
      329 202020
      32A 202028
      32B 5F2022
      32C 202820
      32D 602020
      32E 295F20
      32F 202E5F
      330 5F2920
      331 202020
      332 202020
1040.  333 202020  EXPLOSION_3:	.CHAR '      ( (  (    )   `)  ) _)     ', EXPLOSION_3_LENGTH
      334 202020
      335 282028
      336 202028
      337 202020
      338 202920
      339 202060
      33A 292020
      33B 29205F
      33C 292020
      33D 202020
1041.  33E 202020  EXPLOSION_4:	.CHAR '     (__ (_   (_ . _) _) ,__)    ', EXPLOSION_4_LENGTH
      33F 202028
      340 5F5F20
      341 285F20
      342 202028
      343 5F202E
      344 205F29
      345 205F29
      346 202C5F
      347 5F2920
      348 202020
1042.  349 202020  EXPLOSION_5:	.CHAR '         `~~`\\ " . /`~~`         ', EXPLOSION_5_LENGTH
      34A 202020
      34B 202020
      34C 607E7E
      34D 605C20
      34E 22202E
      34F 202F60
      350 7E7E60
      351 202020
      352 202020
      353 202020
      354 202020
1043.  354 202020  EXPLOSION_6:	.CHAR '              ;   ;              ', EXPLOSION_6_LENGTH
      355 202020
      356 202020
      357 202020
      358 20203B
      359 202020
      35A 3B2020
      35B 202020
      35C 202020
      35D 202020
      35E 202020
1044.  35F 202020  EXPLOSION_7:	.CHAR '              /   \\              ', EXPLOSION_7_LENGTH
      360 202020
      361 202020
      362 202020
      363 20202F
      364 202020
      365 5C2020
      366 202020
      367 202020
      368 202020
      369 202020
      36A 7E7E7E
1045.  36A 7E7E7E  EXPLOSION_8:	.CHAR '~~~~~~~~~~~~~/_ __ \\~~~~~~~~~~~~~', EXPLOSION_8_LENGTH
      36B 7E7E7E
      36C 7E7E7E
      36D 7E7E7E
      36E 7E2F5F
      36F 205F5F
      370 205C7E
      371 7E7E7E
      372 7E7E7E
      373 7E7E7E
      374 7E7E7E
      375 FFFFFFFFFFFFFFFF
1046.              
1047.              ;------------------------------------------------------------------------------------------------------------
1048.              ; setting up timer and keyboard ISR
1049.              		.EQU 	@,$FFB
1050.  FFB 0000C0  		.WORD	TIMER_ISR
1051.              
1052.              		.EQU	@,$FF8
1053.  FF8 000057  		.WORD	KEYBD_ISR
1054.              		.END

                     SYMBOL TABLE CONTENTS

000297 = BLOCKED         000312 = BLOW_UP_MSG     00000A = BOOM_LENGTH     
0002DD = BOOM_LOOP_MSG   00015A = BOTTOM_LINE_CHECK000313 = BOTTOM_RIGHT    
00000A = CHARGE_DELAY    0002E7 = CLEAN_UP_BOOM   0002EB = CLEAN_UP_LOOP   
000001 = CLEAR_DISPLAY   000316 = CRT_CNTL        000026 = CRT_COLS        
000317 = CRT_DATA        000198 = CRT_FIFTH_ROW   000100 = CRT_FIRST_ROW   
000172 = CRT_FOURTH_ROW  00000E = CRT_ROWS        000126 = CRT_SECOND_ROW  
0001B8 = CRT_SIXTH_ROW   000278 = CRT_SWAP        00014C = CRT_THIRD_ROW   
000314 = CRT_XREG        000315 = CRT_YREG        0002F3 = DELAY           
000000 = DISABLE_INTERRUPTS000055 = DONE_INC_LEVEL  0002C0 = DONE_INC_SCORE  
0001A6 = DONE_MOVING     0000C0 = ENABLE_AND_RESET0000D0 = ENABLE_RESET_AND_START
000137 = ENTERING_LEFT   00011C = ENTERING_RIGHT  00031D = EXPLOSION_1     
000021 = EXPLOSION_1_LENGTH000328 = EXPLOSION_2     000021 = EXPLOSION_2_LENGTH
000333 = EXPLOSION_3     000021 = EXPLOSION_3_LENGTH00033E = EXPLOSION_4     
000021 = EXPLOSION_4_LENGTH000349 = EXPLOSION_5     000021 = EXPLOSION_5_LENGTH
000354 = EXPLOSION_6     000021 = EXPLOSION_6_LENGTH00035F = EXPLOSION_7     
000021 = EXPLOSION_7_LENGTH00036A = EXPLOSION_8     000021 = EXPLOSION_8_LENGTH
0000E7 = EXPLOSION_LOOP  000145 = FAST_ENTERING_LEFT00012C = FAST_ENTERING_RIGHT
00021A = FAST_LEFT_WALL  00024C = FAST_RIGHT_WALL 000266 = FIND_ENEMY_SUB  
000014 = GAMEOVER_LENGTH 000316 = GAMEOVER_MSG    0000DE = GAME_OVER       
000E01 = GET_NUM         000002 = HIT_SUB_POS     0002F4 = I               
000043 = INCREASE_LEVEL  0002B1 = INCREASE_SCORE  000080 = INTERRUPT_ENA   
0002F5 = J               000000 = KBD_CNTL        000001 = KBD_DATA        
000040 = KBD_FLUSH       000000 = KBD_STAT        000057 = KEYBD_ISR       
0000B9 = KEY_DONE        000005 = LEFT_BORDER     000066 = LEFT_CHARGE     
0001E7 = LEFT_DIRECTION_SUB0001F6 = LEFT_SHIFT      000223 = LEFT_SHIFT_DONE 
000210 = LEFT_WALL       0001F0 = LEFT_WALL_ATE   000300 = LEVEL           
0002F9 = LEVEL_CNT       00011A = LEVEL_COUNTER   000007 = LEVEL_LENGTH    
0002D3 = LOOP_DESTROY    0001D3 = LOOP_MV_SUB_L   0002E6 = LOOP_ONE        
00003B = MAIN            00026F = MAKE_ENEMY_BOMB 000259 = MAKE_ENEMY_CHARGES
000274 = MAKE_MINES_DONE 000100 = MAKE_SUB        00014D = MAKE_SUB_DONE   
000154 = MOVE_CHARGES    0001A8 = MOVE_DONE       000166 = MOVE_DOWN       
000078 = MOVE_SHIP_LEFT  000099 = MOVE_SHIP_RIGHT 0001AD = MOVE_SUBS       
0001F1 = MOVE_SUBS_DONE  0001D1 = MOVE_SUBS_LEFT  0001B3 = MOVE_SUBS_RIGHT 
00017D = MOVE_UP         000196 = MOVE_UP_LOOP    000082 = MV_SHIP_LEFT_LOOP_1
000090 = MV_SHIP_LEFT_LOOP_20000A3 = MV_SHIP_RIGHT_LOOP_10000B1 = MV_SHIP_RIGHT_LOOP_2
000192 = NOT_HIT         0000CC = NOT_MAKE_SUBS   000283 = NO_BLOCK        
000298 = NO_BLOCK_DONE   00028C = NO_BLOCK_LOOP   00030D = ONE_POINT_SUB_LEFT
000007 = ONE_POINT_SUB_LEFT_LENGTH00030A = ONE_POINT_SUB_RIGHT000007 = ONE_POINT_SUB_RIGHT_LENGTH
000113 = OPEN_ROUTE      000E08 = PUT_CHR         000E06 = PUT_NL          
000E00 = PUT_NUM         000E07 = PUT_NUM2        000E05 = PUT_STR         
00029C = RANDOM          000002 = RANDOMMAX       000002 = RANDOMMAXD      
0002A7 = RANDOM_TIMER    000040 = RESET_READY_BIT 000020 = RIGHT_BORDER    
00006F = RIGHT_CHARGE    0001C6 = RIGHT_DIRECTION_SUB000228 = RIGHT_SHIFT     
000254 = RIGHT_SHIFT_DONE000242 = RIGHT_WALL      0001D0 = RIGHT_WALL_ATE  
0002FD = SCORE           0002FC = SCORE_CNT       000107 = SCORE_COUNTER   
000007 = SCORE_LENGTH    0002F8 = SEED            000011 = SETUP_LEVEL     
000007 = SETUP_SCORE     000205 = SHIFT_LEFT      000237 = SHIFT_RIGHT     
0001EA = SHIFT_SUB_LEFT  0001C9 = SHIFT_SUB_RIGHT 0002F6 = SHIP_CURR_POS   
00001E = SHIP_ROW_1      000027 = SHIP_ROW_2      000303 = SHIP_ROW_ONE    
000008 = SHIP_ROW_ONE_LENGTH000306 = SHIP_ROW_TWO    00000B = SHIP_ROW_TWO_LENGTH
000005 = SHIP_SIZE_OFFSET0000D5 = SKIP_SUBS       00013C = SLOW_ENTERING_LEFT
000121 = SLOW_ENTERING_RIGHT000201 = SLOW_LEFT       00020C = SLOW_LEFT_WALL  
000233 = SLOW_RIGHT      00023E = SLOW_RIGHT_WALL 000010 = START_AFTER_LOAD
0002FB = SUB_COUNT       000005 = SUB_DELAY       0002CA = SUB_DESTROYED   
0002FA = SUB_LIMIT       0002F7 = TIMER           0000D9 = TIMER_DONE      
0000C0 = TIMER_ISR       000030 = TIM_CNTL        000034 = TIM_COUNT       
000030 = TIM_STAT        000031 = TIM_VALUE       00017F = TOP_LINE_CHECK  
0001C3 = TWO_POINT_LEFT  0001E3 = TWO_POINT_RIGHT 000311 = TWO_POINT_SUB_LEFT
000003 = TWO_POINT_SUB_LEFT_LENGTH000310 = TWO_POINT_SUB_RIGHT000003 = TWO_POINT_SUB_RIGHT_LENGTH
000002 = U               000003 = V               000100 = VIDEO_MEMORY    
00002F = WATER_SURFACE   000002 = Y               